version: "3.9"
services:
  moisturecarbonservice:
    build:
      context: etl/extract/moisturecarbonservice
​
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
    volumes:
      - ./datastore:/data
    command: server /data
​
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config; /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin; /usr/bin/mc mb --ignore-existing myminio/smart-thermo-sensor; exit 0; "
​
  sensorsmock:
    build:
      context: sensors
    container_name: sensorsmock
    ports:
      - "3000:3000"
    depends_on:
      - minio
      - createbuckets
    environment:
      - SMART_THERMO_BUCKET=smart-thermo-sensor
      - MOISTURE_MATE_URL=http://etlservice:8000/api/moisturemate
      - CARBON_SENSE_URL=http://etlservice:8000/api/carbonsense
      - AWS_ACCESS_KEY_ID=
      - AWS_SECRET_ACCESS_KEY=
​
  lux_meter:
    build: 
      context: etl/extract/luxmeterservice
    container_name: lux_meter
    ports:
      - "3007:3007"
    environment:
      - KAFKA_BOOTSTRAP_SERVER=kafka:29092
      - LUXMETER_URL=http://sensorsmock:3000/api/luxmeter/
    depends_on:
      - kafka
      - sensorsmock 
    restart: always
​
  smart_thermo:
    build:
      context: etl/extract/smart_thermo_service
    container_name: smart_thermo
    environment:
      - ENDPOINT_URL=http://minio:9000
      - SMART_THERMO_BUCKET=smart-thermo-sensor
      - AWS_ACCESS_KEY_ID=
      - AWS_SECRET_ACCESS_KEY=
      - KAFKA_BOOTSTRAP_SERVER=kafka:29092
    depends_on:
      - kafka 
      - minio
      - createbuckets
      - sensorsmock
    restart: always
​
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always
    
  kafka: 

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      
      
  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic luxmeter --replication-factor 1 --partitions 1
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
